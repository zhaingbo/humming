C51 COMPILER V9.00   IMU                                                                   05/13/2016 08:41:31 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE IMU
OBJECT MODULE PLACED IN .\bin\imu.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE usr\app\imu.c LARGE BROWSE INCDIR(.\usr) DEBUG OBJECTEXTEND PRINT(.\listing
                    -\imu.lst) OBJECT(.\bin\imu.obj)

line level    source

   1          /***************************************************************************
   2           *
   3           *   Copyright (c) 2016 www.bjfz.cc. All rights reserved.
   4           *
   5           * @file IMU.C
   6           *
   7           * Abstract
   8           *
   9           * Detail
  10           *
  11           * @author Author email
  12           *
  13           **************************************************************************/
  14          
  15          #include "IMU.h"
  16          #include <stc/STC15W4K60S4.H>
  17          #include <math.H>
  18          
  19          #define pi              3.14159265f
  20          #define Kp              0.8f
  21          #define Ki              0.001f
  22          #define halfT   0.004f
  23          
  24          float idata q0 = 1;
  25          float idata q1 = 0;
  26          float idata q2 = 0;
  27          float idata q3 = 0;
  28          
  29          float idata exInt =     0;
  30          float idata eyInt =     0;
  31          float idata ezInt =     0;
  32          
  33          void IMUupdate(float gx, float gy, float gz, float ax, float ay, float az)
  34          {
  35   1              float idata norm;
  36   1              float idata vx, vy, vz;
  37   1              float idata ex, ey, ez;
  38   1              float idata q0q0 = q0 * q0;
  39   1              float idata q0q1 = q0 * q1;
  40   1              float idata q0q2 = q0 * q2;
  41   1              float idata q0q3 = q0 * q3;
  42   1              float idata q1q1 = q1 * q1;
  43   1              float idata q1q2 = q1 * q2;
  44   1              float idata q1q3 = q1 * q3;
  45   1              float idata q2q2 = q2 * q2;
  46   1              float idata q2q3 = q2 * q3;
  47   1              float idata q3q3 = q3 * q3;
  48   1              norm = sqrt(ax * ax + ay * ay + az * az);
  49   1              ax   = ax / norm;
  50   1              ay   = ay / norm;
  51   1              az   = az / norm;
  52   1              vx = 2 * (q1q3 - q0q2);
  53   1              vy = 2 * (q0q1 + q2q3);
  54   1              vz = q0q0 - q1q1 - q2q2 + q3q3;
C51 COMPILER V9.00   IMU                                                                   05/13/2016 08:41:31 PAGE 2   

  55   1              ex = (ay * vz - az * vy);
  56   1              ey = (az * vx - ax * vz);
  57   1              ez = (ax * vy - ay * vx);
  58   1              exInt = exInt + ex * Ki;
  59   1              eyInt = eyInt + ey * Ki;
  60   1              ezInt = ezInt + ez * Ki;
  61   1              gx = gx + Kp * ex + exInt;
  62   1              gy = gy + Kp * ey + eyInt;
  63   1              gz = gz + Kp * ez + ezInt;
  64   1              q0 = q0 + (-q1 * gx - q2 * gy - q3 * gz) * halfT;
  65   1              q1 = q1 + (q0 * gx + q2 * gz - q3 * gy) * halfT;
  66   1              q2 = q2 + (q0 * gy - q1 * gz + q3 * gx) * halfT;
  67   1              q3 = q3 + (q0 * gz + q1 * gy - q2 * gx) * halfT;
  68   1              norm = sqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
  69   1              q0 = q0 / norm;
  70   1              q1 = q1 / norm;
  71   1              q2 = q2 / norm;
  72   1              q3 = q3 / norm;
  73   1              Angle    = asin(2 * (q0 * q2 - q1 * q3)) * 57.2957795f; // ¸©Ñö
  74   1              Angley = asin(2 * (q0 * q1 + q2 * q3)) * 57.2957795f;   // ºá¹ö
  75   1      }
  76          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1915    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      24
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =     28      68
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
