C51 COMPILER V9.00   MAIN                                                                  05/16/2016 17:19:52 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\bin\main.obj
COMPILER INVOKED BY: d:\Keil\C51\BIN\C51.EXE usr\main.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(.\list\main.lst) OBJECT(.\
                    -bin\main.obj)

line level    source

   1          //套件购买地址                http://shop112966725.taobao.com
   2          //                                        STCunio
   3          
   4          //**********************************遥控器程序Rev1.3正式版********************
   5          //声明：程序作者不会对本程序进行任何升级了，该程序就是该硬件的最终版本
   6          //      本程序可以自行二次开发，不过需要将开发后的版本上传到阿莫论坛，
   7          //      这样本程序开源才有意义.
   8          //
   9          //      谢谢!!!
  10          //          程序：SWUST 电气自动化13级 LQM
  11          
  12          //          本程序适用于STC四轴的小日本手遥控器（右手油门）
  13          //右手上下为油门，左右为横滚
  14          //左手上下为俯仰，左右为旋转
  15          //                                 MCU工作频率28MHZ！！！
  16          #include "stdtype.h"
*** WARNING C318 IN LINE 16 OF usr\main.c: can't open file 'stdtype.h'
  17          
  18          #include <rtx51tny.h>
  19          #include <STC15F2K60S2.H>
*** WARNING C318 IN LINE 19 OF usr\main.c: can't open file 'STC15F2K60S2.H'
  20          #include <NRF24L01.H>
*** WARNING C318 IN LINE 20 OF usr\main.c: can't open file 'NRF24L01.H'
  21          #include <AD.H>
*** WARNING C318 IN LINE 21 OF usr\main.c: can't open file 'AD.H'
  22          
  23          /* RTX-Tiny任务定义 */
  24          #define TASK_IDLE               0
  25          #define TASK_AD                 0               /* AD采样为0#任务 */
  26          #define TASK_nRF24L01   1               /* nRF24L01发射为1#任务 */
  27          #define TASK_NUM                2               /* 任务数 */
  28          
  29          
  30          sbit RLED = P0^5;
*** ERROR C202 IN LINE 30 OF USR\MAIN.C: 'P0': undefined identifier
  31          sbit GLED = P0^6;
*** ERROR C202 IN LINE 31 OF USR\MAIN.C: 'P0': undefined identifier
  32          sbit LKEY = P4^7;
*** ERROR C202 IN LINE 32 OF USR\MAIN.C: 'P4': undefined identifier
  33          sbit RKEY = P3^4;
*** ERROR C202 IN LINE 33 OF USR\MAIN.C: 'P3': undefined identifier
  34          
  35          volatile int16_t idata throttle_gain;
*** ERROR C129 IN LINE 35 OF USR\MAIN.C: missing ';' before 'idata'
  36          volatile int16_t idata roll_gain;
  37          volatile int16_t idata pitch_gain;
  38          volatile int16_t idata yaw_gain;
  39          
  40          volatile int16_t idata throttle;
  41          volatile int16_t idata roll;
  42          volatile int16_t idata pitch;
  43          volatile int16_t idata yaw;
  44          
  45          volatile fp32 idata battery;
C51 COMPILER V9.00   MAIN                                                                  05/16/2016 17:19:52 PAGE 2   

  46          
  47          uint8_t idata TxBuf[20] = {0};
  48          uint8_t idata RxBuf[20] = {0};
  49          void IO_and_Init();
  50          
  51          // 获取AD采样数据
  52          void AD() _task_ TASK_AD
  53          {
  54                  IO_and_Init();          //初始化I/O口
  55                  os_create_task (1); //启动进程1
  56          
  57                  while (1) {
  58                          // 读取4个摇杆通道每个通道的8位数据，取值范围0-255
  59                          throttle = get_adc_result(3);
  60                          Delay(10);
  61                          roll     = get_adc_result(2);
  62                          Delay(10);
  63                          pitch    = get_adc_result(1);
  64                          Delay(10);
  65                          yaw      = get_adc_result(0);
  66                          Delay(10);
  67                          // 电池电压检测通道 低于3.7V亮红灯
  68                          battery  = (get_adc_result(4) * 5.05 * 100) / 256;
  69                          Delay(10);
  70          
  71                          if (battery <= 370) {
  72                                  RLED = 1;
  73                                  GLED = 0;
  74                          } else {
  75                                  RLED = 0;
  76                                  GLED = 1;
  77                          }
  78          
  79                          os_wait(K_IVL, 3, 0); //延时3个节拍
  80                  }
  81          }
  82          
  83          
  84          //俯仰(Pitch)：TxBuf[1]
  85          //横滚(Roll)：TxBuf[2]
  86          //偏航(Yaw)：TxBuf[3]
  87          //油门(Throttle)：TxBuf[4]
  88          void NRF24L01()  _task_ TASK_nRF24L01
  89          {
  90                  while (1)
  91                  {
  92                          TxBuf[0]++;
  93                          TxBuf[1] = 128;
  94                          TxBuf[2] = 128;
  95                          TxBuf[3] = 128;
  96          
  97                          if (throttle < 20) {
  98                      goto EXIT;
  99                  } //当油门拉至最低时遥控器解锁
 100          
 101                          if (RKEY == 0) {
 102                      TxBuf[5] = 1;
 103                  } else {
 104                      TxBuf[5] = 0;
 105                  }
 106          
 107                          if (LKEY == 0) {
C51 COMPILER V9.00   MAIN                                                                  05/16/2016 17:19:52 PAGE 3   

 108                      TxBuf[6] = 1;
 109                  } else {
 110                      TxBuf[6] = 0;
 111                  }
 112          
 113                  // 发送TxBuf数组的数据
 114                          nRF24L01_TxPacket(TxBuf);
 115                  // 给一定延时让数据发送完成
 116                          os_wait(K_IVL, 2, 0);
 117                  }
 118          
 119          EXIT:
 120          
 121                  while (1)
 122                  {
 123                   // 用上电记录的数据对采样数据进行修正，保证摇杆中位时数据为128
 124                          if ((pitch - pitch_gain) >= 255) {
 125                      TxBuf[1] = 255;
 126                  } else if ((pitch - pitch_gain) <= 0) {
 127                      TxBuf[1] = 0;
 128                  } else {
 129                      TxBuf[1] = pitch - pitch_gain;
 130                  }
 131          
 132                          if ((yaw - yaw_gain) >= 255) {
 133                      TxBuf[3] = 255;
 134                  } else if ((yaw - yaw_gain) <= 0) {
 135                      TxBuf[3] = 0;
 136                  } else {
 137                      TxBuf[3] = yaw - yaw_gain;
 138                  }
 139          
 140                          if ((roll - roll_gain) >= 255) {
 141                      TxBuf[2] = 255;
 142                  } else if ((roll - roll_gain) <= 0) {
 143                      TxBuf[2] = 0;
 144                  } else {
 145                      TxBuf[2] = roll - roll_gain;
 146                  }
 147          
 148                  // 油门通道不需处理，直接发送AD检测的8位数据即可，根据AD采样原理
 149                  // 易知读取的AD采样数据不可能为负也不可能大于255
 150                          TxBuf[4] = throttle; 
 151          
 152                          if (RKEY == 0) {
 153                      TxBuf[5] = 1;
 154                  } else {
 155                      TxBuf[5] = 0;
 156                  }
 157          
 158                          if (LKEY == 0) {
 159                      TxBuf[6] = 1;
 160                  } else {
 161                      TxBuf[6] = 0;
 162                  }
 163          
 164                          TxBuf[0]++;
 165                          nRF24L01_TxPacket(TxBuf);
 166                  // 给一定延时让数据发送完成
 167                  os_wait(K_IVL, 2, 0);
 168                  }
 169          }
C51 COMPILER V9.00   MAIN                                                                  05/16/2016 17:19:52 PAGE 4   

 170          
 171          void IO_and_Init()
 172          {
 173                  P1M0 = 0x00; //P1设为高阻模式
 174                  P1M1 = 0xFF;
 175                  P0M0 = 0xFF; //其他I/O口设置为准双向，弱上拉模式
 176                  P0M1 = 0x00;
 177                  P2M0 = 0x00;
 178                  P2M1 = 0x00;
 179                  P3M0 = 0x00;
 180                  P3M1 = 0x00;
 181                  P4M0 = 0x00;
 182                  P4M1 = 0x00;
 183                  P5M0 = 0xFF;
 184                  P5M1 = 0x00;
 185          
 186                  LKEY       = 1;             //拉高按键检测I/O口电平，按键为低电平触发
 187                  RKEY       = 1;
 188                  init_NRF24L01();            //初始化无线模块
 189                  adc_init();                 //初始化AD检测模块
 190                  roll_gain  = get_adc_result(2) - 128; //记录上电时摇杆的数据作为中位修正，因为摇杆中位要为128即256/2
 191                  Delay(10);
 192                  pitch_gain = get_adc_result(1) - 128;
 193                  Delay(10);
 194                  yaw_gain   = get_adc_result(0) - 128; //记录回中的轴的初始位置数据
 195                  Delay(10);
 196          }

C51 COMPILATION COMPLETE.  4 WARNING(S),  5 ERROR(S)
